package org.extraktion.listener;

import org.activiti.engine.delegate.DelegateExecution;
import org.extraktion.TestObjectDesigner;
import org.extraktion.templatesCreation.SuperElementObject;
import org.extraktion.templatesCreation.behaviour.SignalReceiveElementObject;
import org.hibernate.Session;
import org.hibernate.SessionFactory;

/**
 * Gruppen Listener für Intermediate Signals Receive Elemente.
 * @author Sascha Buelles
 *
 */
public class ExecutionListenerImplSignalReceive extends StandardExecutionListenerImplementation {

	private static final long serialVersionUID = 1L;

	@Override
	protected final SuperElementObject createExecutionObjectWithType(final DelegateExecution execution) {
		SuperElementObject signalReceiveElementObject = new SignalReceiveElementObject(execution);
		
		signalReceiveElementObject.setelementName("SignalReceiveElement");
		signalReceiveElementObject.setElementDefinitionKey(execution.getCurrentActivityId());
		SessionFactory hibernateSessionFactory = TestObjectDesigner.getInstance().getHibernateSessionFactory();
		Session session = hibernateSessionFactory.openSession();
		session.beginTransaction();
		signalReceiveElementObject
				.setId(session.createNativeQuery("SELECT * FROM EXTRAKTION;").getResultList().size() + 1);

		session.save(signalReceiveElementObject);
		session.getTransaction().commit();
		session.close();
		return signalReceiveElementObject;
	}

}
