package development;

import java.util.List;
import org.activiti.engine.repository.Deployment;
import org.activiti.engine.runtime.ProcessInstance;
import org.activiti.engine.test.ActivitiRule;
import org.extraktion.TestObjectDesigner;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.junit.Rule;
import org.junit.Test;

/**
 * Löschen aller Depoyments in der Activiti Datenbank.
 * 
 * @author Sascha Buelles
 *
 */
public class DeleteAllDeploymentsAndInstances {

	/**
	 * Activiti Rule.
	 */
	@Rule
	public ActivitiRule activitiRule = new ActivitiRule();

	/**
	 * Testmethode.
	 */
	@Test
	public final void deletedeps() {
		List<Deployment> deployments = activitiRule.getRepositoryService().createDeploymentQuery().list();

		// Alle aktiven Prozess Instanzen stoppen, danach alle Deployments
		// löschen
		List<ProcessInstance> runningInstances = activitiRule.getRuntimeService().createProcessInstanceQuery().list();
		for (ProcessInstance processInstance : runningInstances) {
			activitiRule.getRuntimeService().deleteProcessInstance(processInstance.getId(), "work");
		}
		for (Deployment deployment : deployments) {
			activitiRule.getRepositoryService().deleteDeployment(deployment.getId());
		}

		SessionFactory hibernateSessionFactory = TestObjectDesigner.getInstance().getHibernateSessionFactory();
		Session openSession = hibernateSessionFactory.openSession();
		try {
			openSession.beginTransaction();
			openSession.createNativeQuery("DELETE FROM EXTRAKTION").executeUpdate();
			
		} catch (Exception e) {
			System.out.println("Die Tabelle wurde bereits gedroppt");
			e.printStackTrace();
		}
		openSession.close();
		hibernateSessionFactory.close();
	}

}
