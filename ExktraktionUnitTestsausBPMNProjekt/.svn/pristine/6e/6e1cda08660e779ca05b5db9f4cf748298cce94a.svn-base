package generatedUnitTests; 

   
 import org.activiti.engine.runtime.ProcessInstance;
  
  
 import org.activiti.engine.task.Task;
 import org.junit.Assert; 
  
 import java.io.FileInputStream;
 import java.util.HashMap;
 import java.util.Map;
 import org.activiti.engine.test.ActivitiRule;
 import org.junit.Rule;
 import org.junit.Test;
 import org.activiti.engine.IdentityService;
 import org.activiti.engine.RepositoryService;
 import org.activiti.engine.RuntimeService;
 import org.activiti.engine.TaskService;
 import org.activiti.engine.repository.Deployment;
  


public class ProcessTest_ADS_JUnit{

	private String filename = "./src/main/resources/original/serviceTaskTestProcess.bpmn20.xml";

	@Rule
	public ActivitiRule activitiRule = new ActivitiRule();

	@Test
	public void executeProcess() throws Exception {
		RepositoryService repositoryService = activitiRule.getRepositoryService();
		RuntimeService runtimeService = activitiRule.getRuntimeService();
		TaskService taskService = activitiRule.getTaskService();
		IdentityService identityService = activitiRule.getIdentityService();

		ProcessInstance processInstance =null; 

		Deployment deploy = repositoryService.createDeployment().addInputStream("serviceTaskTestProcess.bpmn20.xml",
					new FileInputStream(filename)).deploy();

		Map<String, Object> variableMap = new HashMap<String, Object>();

		identityService.setAuthenticatedUserId("kermit");
		processInstance = runtimeService.startProcessInstanceByKey("serviceTaskTestProcess",variableMap);

		//Take Sequence Flow: Vorangeganenes Objekt:sid-5BC4304C-039F-4936-887A-5C2A30AD06F1

		//________________ServiceTask_Elementname:_ST___________________
		System.out.println("Ausf?hrung Service Task: ST. Variablenwerte:");
		System.out.println("Variable x : 2");
		//________________ServiceTask____________________

		//Take Sequence Flow: Vorangeganenes Objekt:st


		//Take Sequence Flow: Vorangeganenes Objekt:sid-3C1DDD59-3C5B-44C5-AA8F-00EC06BE9128

		//___User Task___
		processInstance = runtimeService.createProcessInstanceQuery().processDefinitionKey("serviceTaskTestProcess").singleResult();
		Task task_ut2 = (taskService.createTaskQuery().processInstanceId(processInstance.getId())).active()
				.taskDefinitionKey("ut2").singleResult();
		Assert.assertNotNull("Der Originalprozess wurde ver?ndert. Task nicht gefunden", task_ut2);taskService.setAssignee(task_ut2.getId(),"kermit");
		variableMap.put("x",  2);
		taskService.complete(task_ut2.getId(), variableMap);
		//___User Task___

		//Take Sequence Flow: Vorangeganenes Objekt:ut2


		//Take Sequence Flow: Vorangeganenes Objekt:sid-C62FC066-5535-462B-BEF2-983807D84D93

		//"x", 2;
		System.out.println("Teilprozess (2442512) wurde beendet");

		//_____Testausf?hrung_beendet_____________________________________________
		repositoryService.deleteDeployment(deploy.getId(),true);
		//_____Deployment_wird_gel?scht___________________________________________
	}

}